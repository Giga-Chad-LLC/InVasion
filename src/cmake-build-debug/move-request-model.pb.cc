// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: move-request-model.proto

#include "move-request-model.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace request_models {
class MoveRequestModelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoveRequestModel>
      _instance;
} _MoveRequestModel_default_instance_;
}  // namespace request_models
namespace protobuf_move_2drequest_2dmodel_2eproto {
static void InitDefaultsMoveRequestModel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::request_models::_MoveRequestModel_default_instance_;
    new (ptr) ::request_models::MoveRequestModel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::request_models::MoveRequestModel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoveRequestModel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoveRequestModel}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_MoveRequestModel.base);
}

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::request_models::MoveRequestModel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::request_models::MoveRequestModel, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::request_models::MoveRequestModel, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::request_models::MoveRequestModel, current_event_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::request_models::MoveRequestModel)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::request_models::_MoveRequestModel_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "move-request-model.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030move-request-model.proto\022\016request_mode"
      "ls\"\254\002\n\020MoveRequestModel\022\022\n\nsession_id\030\001 "
      "\001(\005\022\021\n\tplayer_id\030\002 \001(\005\022A\n\rcurrent_event\030"
      "\003 \001(\0162*.request_models.MoveRequestModel."
      "MoveEvent\"\255\001\n\tMoveEvent\022\021\n\rStartMovingUp"
      "\020\000\022\024\n\020StartMovingRight\020\001\022\023\n\017StartMovingD"
      "own\020\002\022\023\n\017StartMovingLeft\020\003\022\020\n\014StopMoving"
      "Up\020\004\022\023\n\017StopMovingRight\020\005\022\022\n\016StopMovingD"
      "own\020\006\022\022\n\016StopMovingLeft\020\007b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 353);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "move-request-model.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_move_2drequest_2dmodel_2eproto
namespace request_models {
const ::google::protobuf::EnumDescriptor* MoveRequestModel_MoveEvent_descriptor() {
  protobuf_move_2drequest_2dmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_move_2drequest_2dmodel_2eproto::file_level_enum_descriptors[0];
}
bool MoveRequestModel_MoveEvent_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MoveRequestModel_MoveEvent MoveRequestModel::StartMovingUp;
const MoveRequestModel_MoveEvent MoveRequestModel::StartMovingRight;
const MoveRequestModel_MoveEvent MoveRequestModel::StartMovingDown;
const MoveRequestModel_MoveEvent MoveRequestModel::StartMovingLeft;
const MoveRequestModel_MoveEvent MoveRequestModel::StopMovingUp;
const MoveRequestModel_MoveEvent MoveRequestModel::StopMovingRight;
const MoveRequestModel_MoveEvent MoveRequestModel::StopMovingDown;
const MoveRequestModel_MoveEvent MoveRequestModel::StopMovingLeft;
const MoveRequestModel_MoveEvent MoveRequestModel::MoveEvent_MIN;
const MoveRequestModel_MoveEvent MoveRequestModel::MoveEvent_MAX;
const int MoveRequestModel::MoveEvent_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void MoveRequestModel::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoveRequestModel::kSessionIdFieldNumber;
const int MoveRequestModel::kPlayerIdFieldNumber;
const int MoveRequestModel::kCurrentEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoveRequestModel::MoveRequestModel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_move_2drequest_2dmodel_2eproto::scc_info_MoveRequestModel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:request_models.MoveRequestModel)
}
MoveRequestModel::MoveRequestModel(const MoveRequestModel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&session_id_, &from.session_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&current_event_) -
    reinterpret_cast<char*>(&session_id_)) + sizeof(current_event_));
  // @@protoc_insertion_point(copy_constructor:request_models.MoveRequestModel)
}

void MoveRequestModel::SharedCtor() {
  ::memset(&session_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&current_event_) -
      reinterpret_cast<char*>(&session_id_)) + sizeof(current_event_));
}

MoveRequestModel::~MoveRequestModel() {
  // @@protoc_insertion_point(destructor:request_models.MoveRequestModel)
  SharedDtor();
}

void MoveRequestModel::SharedDtor() {
}

void MoveRequestModel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MoveRequestModel::descriptor() {
  ::protobuf_move_2drequest_2dmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_move_2drequest_2dmodel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MoveRequestModel& MoveRequestModel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_move_2drequest_2dmodel_2eproto::scc_info_MoveRequestModel.base);
  return *internal_default_instance();
}


void MoveRequestModel::Clear() {
// @@protoc_insertion_point(message_clear_start:request_models.MoveRequestModel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&session_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&current_event_) -
      reinterpret_cast<char*>(&session_id_)) + sizeof(current_event_));
  _internal_metadata_.Clear();
}

bool MoveRequestModel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:request_models.MoveRequestModel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 session_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 player_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .request_models.MoveRequestModel.MoveEvent current_event = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_current_event(static_cast< ::request_models::MoveRequestModel_MoveEvent >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:request_models.MoveRequestModel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:request_models.MoveRequestModel)
  return false;
#undef DO_
}

void MoveRequestModel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:request_models.MoveRequestModel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 session_id = 1;
  if (this->session_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->session_id(), output);
  }

  // int32 player_id = 2;
  if (this->player_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->player_id(), output);
  }

  // .request_models.MoveRequestModel.MoveEvent current_event = 3;
  if (this->current_event() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->current_event(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:request_models.MoveRequestModel)
}

::google::protobuf::uint8* MoveRequestModel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:request_models.MoveRequestModel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 session_id = 1;
  if (this->session_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->session_id(), target);
  }

  // int32 player_id = 2;
  if (this->player_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->player_id(), target);
  }

  // .request_models.MoveRequestModel.MoveEvent current_event = 3;
  if (this->current_event() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->current_event(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:request_models.MoveRequestModel)
  return target;
}

size_t MoveRequestModel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:request_models.MoveRequestModel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 session_id = 1;
  if (this->session_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->session_id());
  }

  // int32 player_id = 2;
  if (this->player_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->player_id());
  }

  // .request_models.MoveRequestModel.MoveEvent current_event = 3;
  if (this->current_event() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->current_event());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoveRequestModel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:request_models.MoveRequestModel)
  GOOGLE_DCHECK_NE(&from, this);
  const MoveRequestModel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MoveRequestModel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:request_models.MoveRequestModel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:request_models.MoveRequestModel)
    MergeFrom(*source);
  }
}

void MoveRequestModel::MergeFrom(const MoveRequestModel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:request_models.MoveRequestModel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.session_id() != 0) {
    set_session_id(from.session_id());
  }
  if (from.player_id() != 0) {
    set_player_id(from.player_id());
  }
  if (from.current_event() != 0) {
    set_current_event(from.current_event());
  }
}

void MoveRequestModel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:request_models.MoveRequestModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoveRequestModel::CopyFrom(const MoveRequestModel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:request_models.MoveRequestModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoveRequestModel::IsInitialized() const {
  return true;
}

void MoveRequestModel::Swap(MoveRequestModel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoveRequestModel::InternalSwap(MoveRequestModel* other) {
  using std::swap;
  swap(session_id_, other->session_id_);
  swap(player_id_, other->player_id_);
  swap(current_event_, other->current_event_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MoveRequestModel::GetMetadata() const {
  protobuf_move_2drequest_2dmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_move_2drequest_2dmodel_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace request_models
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::request_models::MoveRequestModel* Arena::CreateMaybeMessage< ::request_models::MoveRequestModel >(Arena* arena) {
  return Arena::CreateInternal< ::request_models::MoveRequestModel >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
