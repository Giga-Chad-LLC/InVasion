[gd_scene load_steps=7 format=2]

[ext_resource path="res://models/supplies/images/HeartUIFull.png" type="Texture" id=1]
[ext_resource path="res://models/supplies/scripts/supply.gd" type="Script" id=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform float opacity = 0;

void fragment(){
 COLOR.rgb = texture(TEXTURE, UV).rgb * (1.0 - opacity) + vec3(1,1,1) * opacity; // interpolates between the original sprite's color and the color white depending on the value of hit_opacity
 COLOR.a = texture(TEXTURE, UV).a; // copies the original sprite's alpha values
}
"

[sub_resource type="ShaderMaterial" id=2]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/opacity = 0.0

[sub_resource type="Animation" id=3]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath(".:material:shader_param/opacity")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}

[sub_resource type="Animation" id=4]
resource_name = "Use"
length = 0.2
tracks/0/type = "value"
tracks/0/path = NodePath(".:material:shader_param/opacity")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 1.0, 0.0 ]
}

[node name="Supply" type="Node2D"]
script = ExtResource( 2 )

[node name="Sprite" type="Sprite" parent="."]
material = SubResource( 2 )
texture = ExtResource( 1 )

[node name="UseAnimation" type="AnimationPlayer" parent="Sprite"]
anims/RESET = SubResource( 3 )
anims/Use = SubResource( 4 )
