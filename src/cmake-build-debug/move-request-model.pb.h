// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: move-request-model.proto

#ifndef PROTOBUF_INCLUDED_move_2drequest_2dmodel_2eproto
#define PROTOBUF_INCLUDED_move_2drequest_2dmodel_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_move_2drequest_2dmodel_2eproto 

namespace protobuf_move_2drequest_2dmodel_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_move_2drequest_2dmodel_2eproto
namespace request_models {
class MoveRequestModel;
class MoveRequestModelDefaultTypeInternal;
extern MoveRequestModelDefaultTypeInternal _MoveRequestModel_default_instance_;
}  // namespace request_models
namespace google {
namespace protobuf {
template<> ::request_models::MoveRequestModel* Arena::CreateMaybeMessage<::request_models::MoveRequestModel>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace request_models {

enum MoveRequestModel_MoveEvent {
  MoveRequestModel_MoveEvent_StartMovingUp = 0,
  MoveRequestModel_MoveEvent_StartMovingRight = 1,
  MoveRequestModel_MoveEvent_StartMovingDown = 2,
  MoveRequestModel_MoveEvent_StartMovingLeft = 3,
  MoveRequestModel_MoveEvent_StopMovingUp = 4,
  MoveRequestModel_MoveEvent_StopMovingRight = 5,
  MoveRequestModel_MoveEvent_StopMovingDown = 6,
  MoveRequestModel_MoveEvent_StopMovingLeft = 7,
  MoveRequestModel_MoveEvent_MoveRequestModel_MoveEvent_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MoveRequestModel_MoveEvent_MoveRequestModel_MoveEvent_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MoveRequestModel_MoveEvent_IsValid(int value);
const MoveRequestModel_MoveEvent MoveRequestModel_MoveEvent_MoveEvent_MIN = MoveRequestModel_MoveEvent_StartMovingUp;
const MoveRequestModel_MoveEvent MoveRequestModel_MoveEvent_MoveEvent_MAX = MoveRequestModel_MoveEvent_StopMovingLeft;
const int MoveRequestModel_MoveEvent_MoveEvent_ARRAYSIZE = MoveRequestModel_MoveEvent_MoveEvent_MAX + 1;

const ::google::protobuf::EnumDescriptor* MoveRequestModel_MoveEvent_descriptor();
inline const ::std::string& MoveRequestModel_MoveEvent_Name(MoveRequestModel_MoveEvent value) {
  return ::google::protobuf::internal::NameOfEnum(
    MoveRequestModel_MoveEvent_descriptor(), value);
}
inline bool MoveRequestModel_MoveEvent_Parse(
    const ::std::string& name, MoveRequestModel_MoveEvent* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MoveRequestModel_MoveEvent>(
    MoveRequestModel_MoveEvent_descriptor(), name, value);
}
// ===================================================================

class MoveRequestModel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:request_models.MoveRequestModel) */ {
 public:
  MoveRequestModel();
  virtual ~MoveRequestModel();

  MoveRequestModel(const MoveRequestModel& from);

  inline MoveRequestModel& operator=(const MoveRequestModel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MoveRequestModel(MoveRequestModel&& from) noexcept
    : MoveRequestModel() {
    *this = ::std::move(from);
  }

  inline MoveRequestModel& operator=(MoveRequestModel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveRequestModel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MoveRequestModel* internal_default_instance() {
    return reinterpret_cast<const MoveRequestModel*>(
               &_MoveRequestModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MoveRequestModel* other);
  friend void swap(MoveRequestModel& a, MoveRequestModel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MoveRequestModel* New() const final {
    return CreateMaybeMessage<MoveRequestModel>(NULL);
  }

  MoveRequestModel* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MoveRequestModel>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MoveRequestModel& from);
  void MergeFrom(const MoveRequestModel& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MoveRequestModel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MoveRequestModel_MoveEvent MoveEvent;
  static const MoveEvent StartMovingUp =
    MoveRequestModel_MoveEvent_StartMovingUp;
  static const MoveEvent StartMovingRight =
    MoveRequestModel_MoveEvent_StartMovingRight;
  static const MoveEvent StartMovingDown =
    MoveRequestModel_MoveEvent_StartMovingDown;
  static const MoveEvent StartMovingLeft =
    MoveRequestModel_MoveEvent_StartMovingLeft;
  static const MoveEvent StopMovingUp =
    MoveRequestModel_MoveEvent_StopMovingUp;
  static const MoveEvent StopMovingRight =
    MoveRequestModel_MoveEvent_StopMovingRight;
  static const MoveEvent StopMovingDown =
    MoveRequestModel_MoveEvent_StopMovingDown;
  static const MoveEvent StopMovingLeft =
    MoveRequestModel_MoveEvent_StopMovingLeft;
  static inline bool MoveEvent_IsValid(int value) {
    return MoveRequestModel_MoveEvent_IsValid(value);
  }
  static const MoveEvent MoveEvent_MIN =
    MoveRequestModel_MoveEvent_MoveEvent_MIN;
  static const MoveEvent MoveEvent_MAX =
    MoveRequestModel_MoveEvent_MoveEvent_MAX;
  static const int MoveEvent_ARRAYSIZE =
    MoveRequestModel_MoveEvent_MoveEvent_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MoveEvent_descriptor() {
    return MoveRequestModel_MoveEvent_descriptor();
  }
  static inline const ::std::string& MoveEvent_Name(MoveEvent value) {
    return MoveRequestModel_MoveEvent_Name(value);
  }
  static inline bool MoveEvent_Parse(const ::std::string& name,
      MoveEvent* value) {
    return MoveRequestModel_MoveEvent_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 session_id = 1;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  ::google::protobuf::int32 session_id() const;
  void set_session_id(::google::protobuf::int32 value);

  // int32 player_id = 2;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::int32 player_id() const;
  void set_player_id(::google::protobuf::int32 value);

  // .request_models.MoveRequestModel.MoveEvent current_event = 3;
  void clear_current_event();
  static const int kCurrentEventFieldNumber = 3;
  ::request_models::MoveRequestModel_MoveEvent current_event() const;
  void set_current_event(::request_models::MoveRequestModel_MoveEvent value);

  // @@protoc_insertion_point(class_scope:request_models.MoveRequestModel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 session_id_;
  ::google::protobuf::int32 player_id_;
  int current_event_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_move_2drequest_2dmodel_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MoveRequestModel

// int32 session_id = 1;
inline void MoveRequestModel::clear_session_id() {
  session_id_ = 0;
}
inline ::google::protobuf::int32 MoveRequestModel::session_id() const {
  // @@protoc_insertion_point(field_get:request_models.MoveRequestModel.session_id)
  return session_id_;
}
inline void MoveRequestModel::set_session_id(::google::protobuf::int32 value) {
  
  session_id_ = value;
  // @@protoc_insertion_point(field_set:request_models.MoveRequestModel.session_id)
}

// int32 player_id = 2;
inline void MoveRequestModel::clear_player_id() {
  player_id_ = 0;
}
inline ::google::protobuf::int32 MoveRequestModel::player_id() const {
  // @@protoc_insertion_point(field_get:request_models.MoveRequestModel.player_id)
  return player_id_;
}
inline void MoveRequestModel::set_player_id(::google::protobuf::int32 value) {
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:request_models.MoveRequestModel.player_id)
}

// .request_models.MoveRequestModel.MoveEvent current_event = 3;
inline void MoveRequestModel::clear_current_event() {
  current_event_ = 0;
}
inline ::request_models::MoveRequestModel_MoveEvent MoveRequestModel::current_event() const {
  // @@protoc_insertion_point(field_get:request_models.MoveRequestModel.current_event)
  return static_cast< ::request_models::MoveRequestModel_MoveEvent >(current_event_);
}
inline void MoveRequestModel::set_current_event(::request_models::MoveRequestModel_MoveEvent value) {
  
  current_event_ = value;
  // @@protoc_insertion_point(field_set:request_models.MoveRequestModel.current_event)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace request_models

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::request_models::MoveRequestModel_MoveEvent> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::request_models::MoveRequestModel_MoveEvent>() {
  return ::request_models::MoveRequestModel_MoveEvent_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_move_2drequest_2dmodel_2eproto
