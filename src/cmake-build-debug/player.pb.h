// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: player.proto

#ifndef PROTOBUF_INCLUDED_player_2eproto
#define PROTOBUF_INCLUDED_player_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_player_2eproto 

namespace protobuf_player_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_player_2eproto
class PlayerAction;
class PlayerActionDefaultTypeInternal;
extern PlayerActionDefaultTypeInternal _PlayerAction_default_instance_;
namespace google {
namespace protobuf {
template<> ::PlayerAction* Arena::CreateMaybeMessage<::PlayerAction>(Arena*);
}  // namespace protobuf
}  // namespace google

enum PlayerAction_Action {
  PlayerAction_Action_Idle = 0,
  PlayerAction_Action_StartMovingUp = 1,
  PlayerAction_Action_StartMovingRight = 2,
  PlayerAction_Action_StartMovingDown = 3,
  PlayerAction_Action_StartMovingLeft = 4,
  PlayerAction_Action_StopMovingUp = 5,
  PlayerAction_Action_StopMovingRight = 6,
  PlayerAction_Action_StopMovingDown = 7,
  PlayerAction_Action_StopMovingLeft = 8,
  PlayerAction_Action_PlayerAction_Action_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerAction_Action_PlayerAction_Action_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerAction_Action_IsValid(int value);
const PlayerAction_Action PlayerAction_Action_Action_MIN = PlayerAction_Action_Idle;
const PlayerAction_Action PlayerAction_Action_Action_MAX = PlayerAction_Action_StopMovingLeft;
const int PlayerAction_Action_Action_ARRAYSIZE = PlayerAction_Action_Action_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerAction_Action_descriptor();
inline const ::std::string& PlayerAction_Action_Name(PlayerAction_Action value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerAction_Action_descriptor(), value);
}
inline bool PlayerAction_Action_Parse(
    const ::std::string& name, PlayerAction_Action* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerAction_Action>(
    PlayerAction_Action_descriptor(), name, value);
}
// ===================================================================

class PlayerAction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerAction) */ {
 public:
  PlayerAction();
  virtual ~PlayerAction();

  PlayerAction(const PlayerAction& from);

  inline PlayerAction& operator=(const PlayerAction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerAction(PlayerAction&& from) noexcept
    : PlayerAction() {
    *this = ::std::move(from);
  }

  inline PlayerAction& operator=(PlayerAction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerAction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerAction* internal_default_instance() {
    return reinterpret_cast<const PlayerAction*>(
               &_PlayerAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PlayerAction* other);
  friend void swap(PlayerAction& a, PlayerAction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerAction* New() const final {
    return CreateMaybeMessage<PlayerAction>(NULL);
  }

  PlayerAction* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerAction>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerAction& from);
  void MergeFrom(const PlayerAction& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerAction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PlayerAction_Action Action;
  static const Action Idle =
    PlayerAction_Action_Idle;
  static const Action StartMovingUp =
    PlayerAction_Action_StartMovingUp;
  static const Action StartMovingRight =
    PlayerAction_Action_StartMovingRight;
  static const Action StartMovingDown =
    PlayerAction_Action_StartMovingDown;
  static const Action StartMovingLeft =
    PlayerAction_Action_StartMovingLeft;
  static const Action StopMovingUp =
    PlayerAction_Action_StopMovingUp;
  static const Action StopMovingRight =
    PlayerAction_Action_StopMovingRight;
  static const Action StopMovingDown =
    PlayerAction_Action_StopMovingDown;
  static const Action StopMovingLeft =
    PlayerAction_Action_StopMovingLeft;
  static inline bool Action_IsValid(int value) {
    return PlayerAction_Action_IsValid(value);
  }
  static const Action Action_MIN =
    PlayerAction_Action_Action_MIN;
  static const Action Action_MAX =
    PlayerAction_Action_Action_MAX;
  static const int Action_ARRAYSIZE =
    PlayerAction_Action_Action_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Action_descriptor() {
    return PlayerAction_Action_descriptor();
  }
  static inline const ::std::string& Action_Name(Action value) {
    return PlayerAction_Action_Name(value);
  }
  static inline bool Action_Parse(const ::std::string& name,
      Action* value) {
    return PlayerAction_Action_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .PlayerAction.Action key_pressed = 1;
  void clear_key_pressed();
  static const int kKeyPressedFieldNumber = 1;
  ::PlayerAction_Action key_pressed() const;
  void set_key_pressed(::PlayerAction_Action value);

  // @@protoc_insertion_point(class_scope:PlayerAction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int key_pressed_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PlayerAction

// .PlayerAction.Action key_pressed = 1;
inline void PlayerAction::clear_key_pressed() {
  key_pressed_ = 0;
}
inline ::PlayerAction_Action PlayerAction::key_pressed() const {
  // @@protoc_insertion_point(field_get:PlayerAction.key_pressed)
  return static_cast< ::PlayerAction_Action >(key_pressed_);
}
inline void PlayerAction::set_key_pressed(::PlayerAction_Action value) {
  
  key_pressed_ = value;
  // @@protoc_insertion_point(field_set:PlayerAction.key_pressed)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::PlayerAction_Action> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PlayerAction_Action>() {
  return ::PlayerAction_Action_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_player_2eproto
